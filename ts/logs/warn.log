{"stringValue":"\"610dea13ae5b93\"","valueType":"string","kind":"ObjectId","value":"610dea13ae5b93","path":"_id","reason":{},"name":"CastError","message":"Cast to ObjectId failed for value \"610dea13ae5b93\" (type string) at path \"_id\" for model \"producto\""}
{"level":"error"}
{"driver":true,"name":"MongoError","index":0,"code":11000,"keyPattern":{"email":1},"keyValue":{"email":"lucasmarina26+1@gmail.com"},"level":"error"}
{"errors":{"celular":{"name":"ValidatorError","message":"Path `celular` is required.","properties":{"message":"Path `celular` is required.","type":"required","path":"celular"},"kind":"required","path":"celular"},"nombreCompleto":{"name":"ValidatorError","message":"Path `nombreCompleto` is required.","properties":{"message":"Path `nombreCompleto` is required.","type":"required","path":"nombreCompleto"},"kind":"required","path":"nombreCompleto"}},"_message":"user validation failed","level":"error","name":"ValidationError","message":"user validation failed: celular: Path `celular` is required., nombreCompleto: Path `nombreCompleto` is required."}
{"errors":{"nombreCompleto":{"name":"ValidatorError","message":"Path `nombreCompleto` is required.","properties":{"message":"Path `nombreCompleto` is required.","type":"required","path":"nombreCompleto"},"kind":"required","path":"nombreCompleto"},"celular":{"name":"ValidatorError","message":"Path `celular` is required.","properties":{"message":"Path `celular` is required.","type":"required","path":"celular"},"kind":"required","path":"celular"}},"_message":"user validation failed","level":"error","name":"ValidationError","message":"user validation failed: nombreCompleto: Path `nombreCompleto` is required., celular: Path `celular` is required."}
{"errors":{"nombreCompleto":{"name":"ValidatorError","message":"Path `nombreCompleto` is required.","properties":{"message":"Path `nombreCompleto` is required.","type":"required","path":"nombreCompleto","value":""},"kind":"required","path":"nombreCompleto","value":""},"celular":{"name":"ValidatorError","message":"Path `celular` is required.","properties":{"message":"Path `celular` is required.","type":"required","path":"celular","value":""},"kind":"required","path":"celular","value":""}},"_message":"user validation failed","level":"error","name":"ValidationError","message":"user validation failed: nombreCompleto: Path `nombreCompleto` is required., celular: Path `celular` is required."}
{"stringValue":"\"IncomingMessage {\n  _readableState: ReadableState {\n    objectMode: false,\n    highWaterMark: 16384,\n    buffer: BufferList { head: null, tail: null, length: 0 },\n    length: 0,\n    pipes: null,\n    pipesCount: 0,\n    flowing: true,\n    ended: true,\n    endEmitted: true,\n    reading: false,\n    sync: false,\n    needReadable: false,\n    emittedReadable: false,\n    readableListening: false,\n    resumeScheduled: false,\n    emitClose: true,\n    autoDestroy: false,\n    destroyed: false,\n    defaultEncoding: 'utf8',\n    awaitDrainWriters: null,\n    multiAwaitDrain: false,\n    readingMore: false,\n    decoder: null,\n    encoding: null,\n    [Symbol(kPaused)]: false\n  },\n  readable: false,\n  _events: [Object: null prototype] {\n    end: [Function: resetHeadersTimeoutOnReqEnd]\n  },\n  _eventsCount: 1,\n  _maxListeners: undefined,\n  socket: Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: null,\n      pipesCount: 0,\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      emitClose: false,\n      autoDestroy: false,\n      destroyed: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    readable: true,\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      bufferedRequest: null,\n      lastBufferedRequest: null,\n      pendingcb: 0,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: false,\n      bufferedRequestCount: 0,\n      corkedRequestsFree: [Object]\n    },\n    writable: true,\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 6,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      httpAllowHalfOpen: false,\n      timeout: 120000,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      headersTimeout: 60000,\n      _connectionKey: '6::::8080',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(asyncId)]: 19\n    },\n    _server: Server {\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 6,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      httpAllowHalfOpen: false,\n      timeout: 120000,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      headersTimeout: 60000,\n      _connectionKey: '6::::8080',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(asyncId)]: 19\n    },\n    timeout: 120000,\n    parser: HTTPParser {\n      '0': [Function: parserOnHeaders],\n      '1': [Function: parserOnHeadersComplete],\n      '2': [Function: parserOnBody],\n      '3': [Function: parserOnMessageComplete],\n      '4': [Function: bound onParserExecute],\n      _headers: [],\n      _url: '',\n      socket: [Circular],\n      incoming: [Circular],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      parsingHeadersStart: 1628349305982\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      socket: [Circular],\n      connection: [Circular],\n      _header: null,\n      _onPendingData: [Function: bound updateOutgoingData],\n      _sent100: false,\n      _expect_continue: false,\n      req: [Circular],\n      locals: [Object: null prototype] {},\n      flush: [Function: flush],\n      write: [Function: write],\n      end: [Function: end],\n      on: [Function: on],\n      writeHead: [Function: writeHead],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype]\n    },\n    [Symbol(asyncId)]: 1934,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner)]: [Circular]\n    },\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: Timeout {\n      _idleTimeout: 120000,\n      _idlePrev: [TimersList],\n      _idleNext: [TimersList],\n      _idleStart: 399793,\n      _onTimeout: [Function: bound ],\n      _timerArgs: undefined,\n      _repeat: null,\n      _destroyed: false,\n      [Symbol(refed)]: false,\n      [Symbol(asyncId)]: 1935,\n      [Symbol(triggerId)]: 1934\n    },\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0\n  },\n  connection: Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: null,\n      pipesCount: 0,\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      emitClose: false,\n      autoDestroy: false,\n      destroyed: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    readable: true,\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      bufferedRequest: null,\n      lastBufferedRequest: null,\n      pendingcb: 0,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: false,\n      bufferedRequestCount: 0,\n      corkedRequestsFree: [Object]\n    },\n    writable: true,\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 6,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      httpAllowHalfOpen: false,\n      timeout: 120000,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      headersTimeout: 60000,\n      _connectionKey: '6::::8080',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(asyncId)]: 19\n    },\n    _server: Server {\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 6,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      httpAllowHalfOpen: false,\n      timeout: 120000,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      headersTimeout: 60000,\n      _connectionKey: '6::::8080',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(asyncId)]: 19\n    },\n    timeout: 120000,\n    parser: HTTPParser {\n      '0': [Function: parserOnHeaders],\n      '1': [Function: parserOnHeadersComplete],\n      '2': [Function: parserOnBody],\n      '3': [Function: parserOnMessageComplete],\n      '4': [Function: bound onParserExecute],\n      _headers: [],\n      _url: '',\n      socket: [Circular],\n      incoming: [Circular],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      parsingHeadersStart: 1628349305982\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      socket: [Circular],\n      connection: [Circular],\n      _header: null,\n      _onPendingData: [Function: bound updateOutgoingData],\n      _sent100: false,\n      _expect_continue: false,\n      req: [Circular],\n      locals: [Object: null prototype] {},\n      flush: [Function: flush],\n      write: [Function: write],\n      end: [Function: end],\n      on: [Function: on],\n      writeHead: [Function: writeHead],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype]\n    },\n    [Symbol(asyncId)]: 1934,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner)]: [Circular]\n    },\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: Timeout {\n      _idleTimeout: 120000,\n      _idlePrev: [TimersList],\n      _idleNext: [TimersList],\n      _idleStart: 399793,\n      _onTimeout: [Function: bound ],\n      _timerArgs: undefined,\n      _repeat: null,\n      _destroyed: false,\n      [Symbol(refed)]: false,\n      [Symbol(asyncId)]: 1935,\n      [Symbol(triggerId)]: 1934\n    },\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: {\n    host: 'localhost:8080',\n    'user-agent': 'insomnia/2021.4.1',\n    cookie: 'sails.sid=s%3AxvlrGy-JuGa8kdxWbUm69NU0sQie5Iq0.72gJGIR82HRzfvX0Wtc%2B8DbYeWandYpicyy%2B19G0MDk',\n    'content-type': 'application/json',\n    accept: '*/*',\n    'content-length': '296'\n  },\n  rawHeaders: [\n    'Host',\n    'localhost:8080',\n    'User-Agent',\n    'insomnia/2021.4.1',\n    'Cookie',\n    'sails.sid=s%3AxvlrGy-JuGa8kdxWbUm69NU0sQie5Iq0.72gJGIR82HRzfvX0Wtc%2B8DbYeWandYpicyy%2B19G0MDk',\n    'Content-Type',\n    'application/json',\n    'Accept',\n    '*/*',\n    'Content-Length',\n    '296'\n  ],\n  trailers: {},\n  rawTrailers: [],\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: null,\n      pipesCount: 0,\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      emitClose: false,\n      autoDestroy: false,\n      destroyed: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    readable: true,\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      bufferedRequest: null,\n      lastBufferedRequest: null,\n      pendingcb: 0,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: false,\n      bufferedRequestCount: 0,\n      corkedRequestsFree: [Object]\n    },\n    writable: true,\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 6,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      httpAllowHalfOpen: false,\n      timeout: 120000,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      headersTimeout: 60000,\n      _connectionKey: '6::::8080',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(asyncId)]: 19\n    },\n    _server: Server {\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 6,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      httpAllowHalfOpen: false,\n      timeout: 120000,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      headersTimeout: 60000,\n      _connectionKey: '6::::8080',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(asyncId)]: 19\n    },\n    timeout: 120000,\n    parser: HTTPParser {\n      '0': [Function: parserOnHeaders],\n      '1': [Function: parserOnHeadersComplete],\n      '2': [Function: parserOnBody],\n      '3': [Function: parserOnMessageComplete],\n      '4': [Function: bound onParserExecute],\n      _headers: [],\n      _url: '',\n      socket: [Circular],\n      incoming: [Circular],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      parsingHeadersStart: 1628349305982\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      socket: [Circular],\n      connection: [Circular],\n      _header: null,\n      _onPendingData: [Function: bound updateOutgoingData],\n      _sent100: false,\n      _expect_continue: false,\n      req: [Circular],\n      locals: [Object: null prototype] {},\n      flush: [Function: flush],\n      write: [Function: write],\n      end: [Function: end],\n      on: [Function: on],\n      writeHead: [Function: writeHead],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype]\n    },\n    [Symbol(asyncId)]: 1934,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner)]: [Circular]\n    },\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: Timeout {\n      _idleTimeout: 120000,\n      _idlePrev: [TimersList],\n      _idleNext: [TimersList],\n      _idleStart: 399793,\n      _onTimeout: [Function: bound ],\n      _timerArgs: undefined,\n      _repeat: null,\n      _destroyed: false,\n      [Symbol(refed)]: false,\n      [Symbol(asyncId)]: 1935,\n      [Symbol(triggerId)]: 1934\n    },\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0\n  },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/login',\n  _parsedUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  params: {},\n  query: {},\n  res: ServerResponse {\n    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n    _eventsCount: 1,\n    _maxListeners: undefined,\n    outputData: [],\n    outputSize: 0,\n    writable: true,\n    _last: false,\n    chunkedEncoding: false,\n    shouldKeepAlive: true,\n    useChunkedEncodingByDefault: true,\n    sendDate: true,\n    _removedConnection: false,\n    _removedContLen: false,\n    _removedTE: false,\n    _contentLength: null,\n    _hasBody: true,\n    _trailer: '',\n    finished: false,\n    _headerSent: false,\n    socket: Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _readableState: [ReadableState],\n      readable: true,\n      _events: [Object: null prototype],\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      _writableState: [WritableState],\n      writable: true,\n      allowHalfOpen: true,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      timeout: 120000,\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      _paused: false,\n      _httpMessage: [Circular],\n      [Symbol(asyncId)]: 1934,\n      [Symbol(kHandle)]: [TCP],\n      [Symbol(kSetNoDelay)]: false,\n      [Symbol(lastWriteQueueSize)]: 0,\n      [Symbol(timeout)]: Timeout {\n        _idleTimeout: 120000,\n        _idlePrev: [TimersList],\n        _idleNext: [TimersList],\n        _idleStart: 399793,\n        _onTimeout: [Function: bound ],\n        _timerArgs: undefined,\n        _repeat: null,\n        _destroyed: false,\n        [Symbol(refed)]: false,\n        [Symbol(asyncId)]: 1935,\n        [Symbol(triggerId)]: 1934\n      },\n      [Symbol(kBuffer)]: null,\n      [Symbol(kBufferCb)]: null,\n      [Symbol(kBufferGen)]: null,\n      [Symbol(kCapture)]: false,\n      [Symbol(kBytesRead)]: 0,\n      [Symbol(kBytesWritten)]: 0\n    },\n    connection: Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _readableState: [ReadableState],\n      readable: true,\n      _events: [Object: null prototype],\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      _writableState: [WritableState],\n      writable: true,\n      allowHalfOpen: true,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      timeout: 120000,\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      _paused: false,\n      _httpMessage: [Circular],\n      [Symbol(asyncId)]: 1934,\n      [Symbol(kHandle)]: [TCP],\n      [Symbol(kSetNoDelay)]: false,\n      [Symbol(lastWriteQueueSize)]: 0,\n      [Symbol(timeout)]: Timeout {\n        _idleTimeout: 120000,\n        _idlePrev: [TimersList],\n        _idleNext: [TimersList],\n        _idleStart: 399793,\n        _onTimeout: [Function: bound ],\n        _timerArgs: undefined,\n        _repeat: null,\n        _destroyed: false,\n        [Symbol(refed)]: false,\n        [Symbol(asyncId)]: 1935,\n        [Symbol(triggerId)]: 1934\n      },\n      [Symbol(kBuffer)]: null,\n      [Symbol(kBufferCb)]: null,\n      [Symbol(kBufferGen)]: null,\n      [Symbol(kCapture)]: false,\n      [Symbol(kBytesRead)]: 0,\n      [Symbol(kBytesWritten)]: 0\n    },\n    _header: null,\n    _onPendingData: [Function: bound updateOutgoingData],\n    _sent100: false,\n    _expect_continue: false,\n    req: [Circular],\n    locals: [Object: null prototype] {},\n    flush: [Function: flush],\n    write: [Function: write],\n    end: [Function: end],\n    on: [Function: on],\n    writeHead: [Function: writeHead],\n    [Symbol(kCapture)]: false,\n    [Symbol(kNeedDrain)]: false,\n    [Symbol(corked)]: 0,\n    [Symbol(kOutHeaders)]: [Object: null prototype] {\n      'x-powered-by': [Array],\n      'access-control-allow-origin': [Array]\n    }\n  },\n  body: {\n    email: 'lucasmarina26+1@gmail.com',\n    password: '1234',\n    passwordConfirm: '1234',\n    nombreCompleto: 'Lucas Marina',\n    celular: '2216408251',\n    admin: true,\n    direccion: {\n      calle: 'calle 10',\n      altura: 366,\n      codigoPostal: '1900A',\n      piso: '3',\n      departamento: 'b'\n    }\n  },\n  _body: true,\n  length: undefined,\n  secret: undefined,\n  cookies: {\n    'sails.sid': 's:xvlrGy-JuGa8kdxWbUm69NU0sQie5Iq0.72gJGIR82HRzfvX0Wtc+8DbYeWandYpicyy+19G0MDk'\n  },\n  signedCookies: [Object: null prototype] {},\n  _parsedOriginalUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  sessionStore: MongoStore {\n    _events: [Object: null prototype] {\n      disconnect: [Function: ondisconnect],\n      connect: [Function: onconnect]\n    },\n    _eventsCount: 2,\n    _maxListeners: undefined,\n    crypto: null,\n    transformFunctions: {\n      serialize: [Function: stringify],\n      unserialize: [Function: parse]\n    },\n    clientP: Promise { [MongoClient] },\n    options: {\n      collectionName: 'sessions',\n      ttl: 600,\n      mongoOptions: [Object],\n      autoRemove: 'native',\n      autoRemoveInterval: 10,\n      touchAfter: 0,\n      stringify: true,\n      crypto: [Object],\n      mongoUrl: 'mongodb+srv://colito:LM753951@cluster0.yjnag.mongodb.net/ecommerce?retryWrites=true&w=majority'\n    },\n    collectionP: Promise { [Collection] },\n    generate: [Function],\n    [Symbol(kCapture)]: false\n  },\n  sessionID: 'e2gfnEG1uHYdlVGbtCaWHpUuPOE60par',\n  session: Session {\n    cookie: {\n      path: '/',\n      _expires: 2021-08-07T15:16:05.984Z,\n      originalMaxAge: 60000,\n      httpOnly: true\n    }\n  },\n  _passport: {\n    instance: Authenticator {\n      _key: 'passport',\n      _strategies: [Object],\n      _serializers: [],\n      _deserializers: [],\n      _infoTransformers: [],\n      _framework: [Object],\n      _userProperty: 'user',\n      _sm: [SessionManager],\n      Authenticator: [Function: Authenticator],\n      Passport: [Function: Authenticator],\n      Strategy: [Function],\n      strategies: [Object]\n    }\n  },\n  route: Route { path: '/login', stack: [ [Layer] ], methods: { post: true } },\n  [Symbol(kCapture)]: false\n}\"","valueType":"IncomingMessage","kind":"string","value":{"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":true,"ended":true,"endEmitted":true,"reading":false,"sync":false,"needReadable":false,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"emitClose":true,"autoDestroy":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrainWriters":null,"multiAwaitDrain":false,"readingMore":false,"decoder":null,"encoding":null},"readable":false,"_events":{},"_eventsCount":1,"socket":{"connecting":false,"_hadError":false,"_parent":null,"_host":null,"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":true,"ended":false,"endEmitted":false,"reading":true,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"emitClose":false,"autoDestroy":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrainWriters":null,"multiAwaitDrain":false,"readingMore":false,"decoder":null,"encoding":null},"readable":true,"_events":{"end":[null,null],"close":[null,null]},"_eventsCount":8,"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":false,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":true,"bufferProcessing":false,"writecb":null,"writelen":0,"afterWriteTickInfo":null,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"emitClose":false,"autoDestroy":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":true,"_sockname":null,"_pendingData":null,"_pendingEncoding":"","server":{"_events":{},"_eventsCount":6,"_connections":1,"_handle":{"reading":false},"_usingWorkers":false,"_workers":[],"_unref":false,"allowHalfOpen":true,"pauseOnConnect":false,"httpAllowHalfOpen":false,"timeout":120000,"keepAliveTimeout":5000,"maxHeadersCount":null,"headersTimeout":60000,"_connectionKey":"6::::8080"},"_server":{"_events":{},"_eventsCount":6,"_connections":1,"_handle":{"reading":false},"_usingWorkers":false,"_workers":[],"_unref":false,"allowHalfOpen":true,"pauseOnConnect":false,"httpAllowHalfOpen":false,"timeout":120000,"keepAliveTimeout":5000,"maxHeadersCount":null,"headersTimeout":60000,"_connectionKey":"6::::8080"},"timeout":120000,"parser":{"_headers":[],"_url":"","socket":"[Circular]","incoming":"[Circular]","outgoing":null,"maxHeaderPairs":2000,"_consumed":true,"parsingHeadersStart":1628349305982},"_paused":false,"_httpMessage":{"_events":{},"_eventsCount":1,"outputData":[],"outputSize":0,"writable":true,"_last":false,"chunkedEncoding":false,"shouldKeepAlive":true,"useChunkedEncodingByDefault":true,"sendDate":true,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_contentLength":null,"_hasBody":true,"_trailer":"","finished":false,"_headerSent":false,"socket":"[Circular]","connection":"[Circular]","_header":null,"_sent100":false,"_expect_continue":false,"req":"[Circular]","locals":{}}},"connection":{"connecting":false,"_hadError":false,"_parent":null,"_host":null,"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":true,"ended":false,"endEmitted":false,"reading":true,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"emitClose":false,"autoDestroy":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrainWriters":null,"multiAwaitDrain":false,"readingMore":false,"decoder":null,"encoding":null},"readable":true,"_events":{"end":[null,null],"close":[null,null]},"_eventsCount":8,"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":false,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":true,"bufferProcessing":false,"writecb":null,"writelen":0,"afterWriteTickInfo":null,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"emitClose":false,"autoDestroy":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":true,"_sockname":null,"_pendingData":null,"_pendingEncoding":"","server":{"_events":{},"_eventsCount":6,"_connections":1,"_handle":{"reading":false},"_usingWorkers":false,"_workers":[],"_unref":false,"allowHalfOpen":true,"pauseOnConnect":false,"httpAllowHalfOpen":false,"timeout":120000,"keepAliveTimeout":5000,"maxHeadersCount":null,"headersTimeout":60000,"_connectionKey":"6::::8080"},"_server":{"_events":{},"_eventsCount":6,"_connections":1,"_handle":{"reading":false},"_usingWorkers":false,"_workers":[],"_unref":false,"allowHalfOpen":true,"pauseOnConnect":false,"httpAllowHalfOpen":false,"timeout":120000,"keepAliveTimeout":5000,"maxHeadersCount":null,"headersTimeout":60000,"_connectionKey":"6::::8080"},"timeout":120000,"parser":{"_headers":[],"_url":"","socket":"[Circular]","incoming":"[Circular]","outgoing":null,"maxHeaderPairs":2000,"_consumed":true,"parsingHeadersStart":1628349305982},"_paused":false,"_httpMessage":{"_events":{},"_eventsCount":1,"outputData":[],"outputSize":0,"writable":true,"_last":false,"chunkedEncoding":false,"shouldKeepAlive":true,"useChunkedEncodingByDefault":true,"sendDate":true,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_contentLength":null,"_hasBody":true,"_trailer":"","finished":false,"_headerSent":false,"socket":"[Circular]","connection":"[Circular]","_header":null,"_sent100":false,"_expect_continue":false,"req":"[Circular]","locals":{}}},"httpVersionMajor":1,"httpVersionMinor":1,"httpVersion":"1.1","complete":true,"headers":{"host":"localhost:8080","user-agent":"insomnia/2021.4.1","cookie":"sails.sid=s%3AxvlrGy-JuGa8kdxWbUm69NU0sQie5Iq0.72gJGIR82HRzfvX0Wtc%2B8DbYeWandYpicyy%2B19G0MDk","content-type":"application/json","accept":"*/*","content-length":"296"},"rawHeaders":["Host","localhost:8080","User-Agent","insomnia/2021.4.1","Cookie","sails.sid=s%3AxvlrGy-JuGa8kdxWbUm69NU0sQie5Iq0.72gJGIR82HRzfvX0Wtc%2B8DbYeWandYpicyy%2B19G0MDk","Content-Type","application/json","Accept","*/*","Content-Length","296"],"trailers":{},"rawTrailers":[],"aborted":false,"upgrade":false,"url":"/login","method":"POST","statusCode":null,"statusMessage":null,"client":{"connecting":false,"_hadError":false,"_parent":null,"_host":null,"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":true,"ended":false,"endEmitted":false,"reading":true,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"emitClose":false,"autoDestroy":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrainWriters":null,"multiAwaitDrain":false,"readingMore":false,"decoder":null,"encoding":null},"readable":true,"_events":{"end":[null,null],"close":[null,null]},"_eventsCount":8,"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":false,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":true,"bufferProcessing":false,"writecb":null,"writelen":0,"afterWriteTickInfo":null,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"emitClose":false,"autoDestroy":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":true,"_sockname":null,"_pendingData":null,"_pendingEncoding":"","server":{"_events":{},"_eventsCount":6,"_connections":1,"_handle":{"reading":false},"_usingWorkers":false,"_workers":[],"_unref":false,"allowHalfOpen":true,"pauseOnConnect":false,"httpAllowHalfOpen":false,"timeout":120000,"keepAliveTimeout":5000,"maxHeadersCount":null,"headersTimeout":60000,"_connectionKey":"6::::8080"},"_server":{"_events":{},"_eventsCount":6,"_connections":1,"_handle":{"reading":false},"_usingWorkers":false,"_workers":[],"_unref":false,"allowHalfOpen":true,"pauseOnConnect":false,"httpAllowHalfOpen":false,"timeout":120000,"keepAliveTimeout":5000,"maxHeadersCount":null,"headersTimeout":60000,"_connectionKey":"6::::8080"},"timeout":120000,"parser":{"_headers":[],"_url":"","socket":"[Circular]","incoming":"[Circular]","outgoing":null,"maxHeaderPairs":2000,"_consumed":true,"parsingHeadersStart":1628349305982},"_paused":false,"_httpMessage":{"_events":{},"_eventsCount":1,"outputData":[],"outputSize":0,"writable":true,"_last":false,"chunkedEncoding":false,"shouldKeepAlive":true,"useChunkedEncodingByDefault":true,"sendDate":true,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_contentLength":null,"_hasBody":true,"_trailer":"","finished":false,"_headerSent":false,"socket":"[Circular]","connection":"[Circular]","_header":null,"_sent100":false,"_expect_continue":false,"req":"[Circular]","locals":{}}},"_consuming":true,"_dumped":false,"baseUrl":"","originalUrl":"/login","_parsedUrl":{"protocol":null,"slashes":null,"auth":null,"host":null,"port":null,"hostname":null,"hash":null,"search":null,"query":null,"pathname":"/login","path":"/login","href":"/login","_raw":"/login"},"params":{},"query":{},"res":{"_events":{},"_eventsCount":1,"outputData":[],"outputSize":0,"writable":true,"_last":false,"chunkedEncoding":false,"shouldKeepAlive":true,"useChunkedEncodingByDefault":true,"sendDate":true,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_contentLength":null,"_hasBody":true,"_trailer":"","finished":false,"_headerSent":false,"socket":"[Circular]","connection":"[Circular]","_header":null,"_sent100":false,"_expect_continue":false,"req":"[Circular]","locals":{}},"body":{"email":"lucasmarina26+1@gmail.com","password":"1234","passwordConfirm":"1234","nombreCompleto":"Lucas Marina","celular":"2216408251","admin":true,"direccion":{"calle":"calle 10","altura":366,"codigoPostal":"1900A","piso":"3","departamento":"b"}},"_body":true,"cookies":{"sails.sid":"s:xvlrGy-JuGa8kdxWbUm69NU0sQie5Iq0.72gJGIR82HRzfvX0Wtc+8DbYeWandYpicyy+19G0MDk"},"signedCookies":{},"_parsedOriginalUrl":{"protocol":null,"slashes":null,"auth":null,"host":null,"port":null,"hostname":null,"hash":null,"search":null,"query":null,"pathname":"/login","path":"/login","href":"/login","_raw":"/login"},"sessionStore":{"_events":{},"_eventsCount":2,"crypto":null,"transformFunctions":{},"clientP":{},"options":{"collectionName":"sessions","ttl":600,"mongoOptions":{"useNewUrlParser":true,"useUnifiedTopology":true},"autoRemove":"native","autoRemoveInterval":10,"touchAfter":0,"stringify":true,"crypto":{"secret":false,"algorithm":"aes-256-gcm","hashing":"sha512","encodeas":"base64","key_size":32,"iv_size":16,"at_size":16},"mongoUrl":"mongodb+srv://colito:LM753951@cluster0.yjnag.mongodb.net/ecommerce?retryWrites=true&w=majority"},"collectionP":{}},"sessionID":"e2gfnEG1uHYdlVGbtCaWHpUuPOE60par","session":{"cookie":{"originalMaxAge":60000,"expires":"2021-08-07T15:16:05.984Z","httpOnly":true,"path":"/"}},"_passport":{"instance":{"_key":"passport","_strategies":{"session":{"name":"session"},"signup":{"_usernameField":"email","_passwordField":"password","name":"local","_passReqToCallback":true},"login":{"_usernameField":"email","_passwordField":"password","name":"local","_passReqToCallback":true},"facebook":{"name":"facebook","_oauth2":{"_clientId":"144567617729985","_clientSecret":"d050d4bcb6a419b96d04579e487816f1","_baseSite":"","_authorizeUrl":"https://www.facebook.com/v3.2/dialog/oauth","_accessTokenUrl":"https://graph.facebook.com/v3.2/oauth/access_token","_accessTokenName":"access_token","_authMethod":"Bearer","_customHeaders":{},"_useAuthorizationHeaderForGET":false},"_callbackURL":"http://localhost:8080/auth/facebook/callback","_scope":["email"],"_scopeSeparator":",","_key":"oauth2:www.facebook.com","_stateStore":{},"_skipUserProfile":false,"_profileURL":"https://graph.facebook.com/v3.2/me","_profileFields":["id","displayName","email","picture.type(large)"],"_enableProof":true,"_clientSecret":"d050d4bcb6a419b96d04579e487816f1"},"jwt":{"name":"jwt","_verifOpts":{"ignoreExpiration":false}}},"_serializers":[],"_deserializers":[],"_infoTransformers":[],"_framework":{},"_userProperty":"user","_sm":{"_key":"passport"},"strategies":{}}},"route":{"path":"/login","stack":[{"name":"login","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"post"}],"methods":{"post":true}}},"path":"email","reason":null,"name":"CastError","message":"Cast to string failed for value \"IncomingMessage {\n  _readableState: ReadableState {\n    objectMode: false,\n    highWaterMark: 16384,\n    buffer: BufferList { head: null, tail: null, length: 0 },\n    length: 0,\n    pipes: null,\n    pipesCount: 0,\n    flowing: true,\n    ended: true,\n    endEmitted: true,\n    reading: false,\n    sync: false,\n    needReadable: false,\n    emittedReadable: false,\n    readableListening: false,\n    resumeScheduled: false,\n    emitClose: true,\n    autoDestroy: false,\n    destroyed: false,\n    defaultEncoding: 'utf8',\n    awaitDrainWriters: null,\n    multiAwaitDrain: false,\n    readingMore: false,\n    decoder: null,\n    encoding: null,\n    [Symbol(kPaused)]: false\n  },\n  readable: false,\n  _events: [Object: null prototype] {\n    end: [Function: resetHeadersTimeoutOnReqEnd]\n  },\n  _eventsCount: 1,\n  _maxListeners: undefined,\n  socket: Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: null,\n      pipesCount: 0,\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      emitClose: false,\n      autoDestroy: false,\n      destroyed: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    readable: true,\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      bufferedRequest: null,\n      lastBufferedRequest: null,\n      pendingcb: 0,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: false,\n      bufferedRequestCount: 0,\n      corkedRequestsFree: [Object]\n    },\n    writable: true,\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 6,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      httpAllowHalfOpen: false,\n      timeout: 120000,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      headersTimeout: 60000,\n      _connectionKey: '6::::8080',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(asyncId)]: 19\n    },\n    _server: Server {\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 6,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      httpAllowHalfOpen: false,\n      timeout: 120000,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      headersTimeout: 60000,\n      _connectionKey: '6::::8080',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(asyncId)]: 19\n    },\n    timeout: 120000,\n    parser: HTTPParser {\n      '0': [Function: parserOnHeaders],\n      '1': [Function: parserOnHeadersComplete],\n      '2': [Function: parserOnBody],\n      '3': [Function: parserOnMessageComplete],\n      '4': [Function: bound onParserExecute],\n      _headers: [],\n      _url: '',\n      socket: [Circular],\n      incoming: [Circular],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      parsingHeadersStart: 1628349305982\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      socket: [Circular],\n      connection: [Circular],\n      _header: null,\n      _onPendingData: [Function: bound updateOutgoingData],\n      _sent100: false,\n      _expect_continue: false,\n      req: [Circular],\n      locals: [Object: null prototype] {},\n      flush: [Function: flush],\n      write: [Function: write],\n      end: [Function: end],\n      on: [Function: on],\n      writeHead: [Function: writeHead],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype]\n    },\n    [Symbol(asyncId)]: 1934,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner)]: [Circular]\n    },\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: Timeout {\n      _idleTimeout: 120000,\n      _idlePrev: [TimersList],\n      _idleNext: [TimersList],\n      _idleStart: 399793,\n      _onTimeout: [Function: bound ],\n      _timerArgs: undefined,\n      _repeat: null,\n      _destroyed: false,\n      [Symbol(refed)]: false,\n      [Symbol(asyncId)]: 1935,\n      [Symbol(triggerId)]: 1934\n    },\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0\n  },\n  connection: Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: null,\n      pipesCount: 0,\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      emitClose: false,\n      autoDestroy: false,\n      destroyed: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    readable: true,\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      bufferedRequest: null,\n      lastBufferedRequest: null,\n      pendingcb: 0,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: false,\n      bufferedRequestCount: 0,\n      corkedRequestsFree: [Object]\n    },\n    writable: true,\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 6,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      httpAllowHalfOpen: false,\n      timeout: 120000,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      headersTimeout: 60000,\n      _connectionKey: '6::::8080',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(asyncId)]: 19\n    },\n    _server: Server {\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 6,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      httpAllowHalfOpen: false,\n      timeout: 120000,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      headersTimeout: 60000,\n      _connectionKey: '6::::8080',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(asyncId)]: 19\n    },\n    timeout: 120000,\n    parser: HTTPParser {\n      '0': [Function: parserOnHeaders],\n      '1': [Function: parserOnHeadersComplete],\n      '2': [Function: parserOnBody],\n      '3': [Function: parserOnMessageComplete],\n      '4': [Function: bound onParserExecute],\n      _headers: [],\n      _url: '',\n      socket: [Circular],\n      incoming: [Circular],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      parsingHeadersStart: 1628349305982\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      socket: [Circular],\n      connection: [Circular],\n      _header: null,\n      _onPendingData: [Function: bound updateOutgoingData],\n      _sent100: false,\n      _expect_continue: false,\n      req: [Circular],\n      locals: [Object: null prototype] {},\n      flush: [Function: flush],\n      write: [Function: write],\n      end: [Function: end],\n      on: [Function: on],\n      writeHead: [Function: writeHead],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype]\n    },\n    [Symbol(asyncId)]: 1934,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner)]: [Circular]\n    },\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: Timeout {\n      _idleTimeout: 120000,\n      _idlePrev: [TimersList],\n      _idleNext: [TimersList],\n      _idleStart: 399793,\n      _onTimeout: [Function: bound ],\n      _timerArgs: undefined,\n      _repeat: null,\n      _destroyed: false,\n      [Symbol(refed)]: false,\n      [Symbol(asyncId)]: 1935,\n      [Symbol(triggerId)]: 1934\n    },\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: {\n    host: 'localhost:8080',\n    'user-agent': 'insomnia/2021.4.1',\n    cookie: 'sails.sid=s%3AxvlrGy-JuGa8kdxWbUm69NU0sQie5Iq0.72gJGIR82HRzfvX0Wtc%2B8DbYeWandYpicyy%2B19G0MDk',\n    'content-type': 'application/json',\n    accept: '*/*',\n    'content-length': '296'\n  },\n  rawHeaders: [\n    'Host',\n    'localhost:8080',\n    'User-Agent',\n    'insomnia/2021.4.1',\n    'Cookie',\n    'sails.sid=s%3AxvlrGy-JuGa8kdxWbUm69NU0sQie5Iq0.72gJGIR82HRzfvX0Wtc%2B8DbYeWandYpicyy%2B19G0MDk',\n    'Content-Type',\n    'application/json',\n    'Accept',\n    '*/*',\n    'Content-Length',\n    '296'\n  ],\n  trailers: {},\n  rawTrailers: [],\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: null,\n      pipesCount: 0,\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      emitClose: false,\n      autoDestroy: false,\n      destroyed: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    readable: true,\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      bufferedRequest: null,\n      lastBufferedRequest: null,\n      pendingcb: 0,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: false,\n      bufferedRequestCount: 0,\n      corkedRequestsFree: [Object]\n    },\n    writable: true,\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 6,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      httpAllowHalfOpen: false,\n      timeout: 120000,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      headersTimeout: 60000,\n      _connectionKey: '6::::8080',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(asyncId)]: 19\n    },\n    _server: Server {\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 6,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      httpAllowHalfOpen: false,\n      timeout: 120000,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      headersTimeout: 60000,\n      _connectionKey: '6::::8080',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(asyncId)]: 19\n    },\n    timeout: 120000,\n    parser: HTTPParser {\n      '0': [Function: parserOnHeaders],\n      '1': [Function: parserOnHeadersComplete],\n      '2': [Function: parserOnBody],\n      '3': [Function: parserOnMessageComplete],\n      '4': [Function: bound onParserExecute],\n      _headers: [],\n      _url: '',\n      socket: [Circular],\n      incoming: [Circular],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      parsingHeadersStart: 1628349305982\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      socket: [Circular],\n      connection: [Circular],\n      _header: null,\n      _onPendingData: [Function: bound updateOutgoingData],\n      _sent100: false,\n      _expect_continue: false,\n      req: [Circular],\n      locals: [Object: null prototype] {},\n      flush: [Function: flush],\n      write: [Function: write],\n      end: [Function: end],\n      on: [Function: on],\n      writeHead: [Function: writeHead],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype]\n    },\n    [Symbol(asyncId)]: 1934,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner)]: [Circular]\n    },\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: Timeout {\n      _idleTimeout: 120000,\n      _idlePrev: [TimersList],\n      _idleNext: [TimersList],\n      _idleStart: 399793,\n      _onTimeout: [Function: bound ],\n      _timerArgs: undefined,\n      _repeat: null,\n      _destroyed: false,\n      [Symbol(refed)]: false,\n      [Symbol(asyncId)]: 1935,\n      [Symbol(triggerId)]: 1934\n    },\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0\n  },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/login',\n  _parsedUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  params: {},\n  query: {},\n  res: ServerResponse {\n    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n    _eventsCount: 1,\n    _maxListeners: undefined,\n    outputData: [],\n    outputSize: 0,\n    writable: true,\n    _last: false,\n    chunkedEncoding: false,\n    shouldKeepAlive: true,\n    useChunkedEncodingByDefault: true,\n    sendDate: true,\n    _removedConnection: false,\n    _removedContLen: false,\n    _removedTE: false,\n    _contentLength: null,\n    _hasBody: true,\n    _trailer: '',\n    finished: false,\n    _headerSent: false,\n    socket: Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _readableState: [ReadableState],\n      readable: true,\n      _events: [Object: null prototype],\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      _writableState: [WritableState],\n      writable: true,\n      allowHalfOpen: true,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      timeout: 120000,\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      _paused: false,\n      _httpMessage: [Circular],\n      [Symbol(asyncId)]: 1934,\n      [Symbol(kHandle)]: [TCP],\n      [Symbol(kSetNoDelay)]: false,\n      [Symbol(lastWriteQueueSize)]: 0,\n      [Symbol(timeout)]: Timeout {\n        _idleTimeout: 120000,\n        _idlePrev: [TimersList],\n        _idleNext: [TimersList],\n        _idleStart: 399793,\n        _onTimeout: [Function: bound ],\n        _timerArgs: undefined,\n        _repeat: null,\n        _destroyed: false,\n        [Symbol(refed)]: false,\n        [Symbol(asyncId)]: 1935,\n        [Symbol(triggerId)]: 1934\n      },\n      [Symbol(kBuffer)]: null,\n      [Symbol(kBufferCb)]: null,\n      [Symbol(kBufferGen)]: null,\n      [Symbol(kCapture)]: false,\n      [Symbol(kBytesRead)]: 0,\n      [Symbol(kBytesWritten)]: 0\n    },\n    connection: Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _readableState: [ReadableState],\n      readable: true,\n      _events: [Object: null prototype],\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      _writableState: [WritableState],\n      writable: true,\n      allowHalfOpen: true,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      timeout: 120000,\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      _paused: false,\n      _httpMessage: [Circular],\n      [Symbol(asyncId)]: 1934,\n      [Symbol(kHandle)]: [TCP],\n      [Symbol(kSetNoDelay)]: false,\n      [Symbol(lastWriteQueueSize)]: 0,\n      [Symbol(timeout)]: Timeout {\n        _idleTimeout: 120000,\n        _idlePrev: [TimersList],\n        _idleNext: [TimersList],\n        _idleStart: 399793,\n        _onTimeout: [Function: bound ],\n        _timerArgs: undefined,\n        _repeat: null,\n        _destroyed: false,\n        [Symbol(refed)]: false,\n        [Symbol(asyncId)]: 1935,\n        [Symbol(triggerId)]: 1934\n      },\n      [Symbol(kBuffer)]: null,\n      [Symbol(kBufferCb)]: null,\n      [Symbol(kBufferGen)]: null,\n      [Symbol(kCapture)]: false,\n      [Symbol(kBytesRead)]: 0,\n      [Symbol(kBytesWritten)]: 0\n    },\n    _header: null,\n    _onPendingData: [Function: bound updateOutgoingData],\n    _sent100: false,\n    _expect_continue: false,\n    req: [Circular],\n    locals: [Object: null prototype] {},\n    flush: [Function: flush],\n    write: [Function: write],\n    end: [Function: end],\n    on: [Function: on],\n    writeHead: [Function: writeHead],\n    [Symbol(kCapture)]: false,\n    [Symbol(kNeedDrain)]: false,\n    [Symbol(corked)]: 0,\n    [Symbol(kOutHeaders)]: [Object: null prototype] {\n      'x-powered-by': [Array],\n      'access-control-allow-origin': [Array]\n    }\n  },\n  body: {\n    email: 'lucasmarina26+1@gmail.com',\n    password: '1234',\n    passwordConfirm: '1234',\n    nombreCompleto: 'Lucas Marina',\n    celular: '2216408251',\n    admin: true,\n    direccion: {\n      calle: 'calle 10',\n      altura: 366,\n      codigoPostal: '1900A',\n      piso: '3',\n      departamento: 'b'\n    }\n  },\n  _body: true,\n  length: undefined,\n  secret: undefined,\n  cookies: {\n    'sails.sid': 's:xvlrGy-JuGa8kdxWbUm69NU0sQie5Iq0.72gJGIR82HRzfvX0Wtc+8DbYeWandYpicyy+19G0MDk'\n  },\n  signedCookies: [Object: null prototype] {},\n  _parsedOriginalUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  sessionStore: MongoStore {\n    _events: [Object: null prototype] {\n      disconnect: [Function: ondisconnect],\n      connect: [Function: onconnect]\n    },\n    _eventsCount: 2,\n    _maxListeners: undefined,\n    crypto: null,\n    transformFunctions: {\n      serialize: [Function: stringify],\n      unserialize: [Function: parse]\n    },\n    clientP: Promise { [MongoClient] },\n    options: {\n      collectionName: 'sessions',\n      ttl: 600,\n      mongoOptions: [Object],\n      autoRemove: 'native',\n      autoRemoveInterval: 10,\n      touchAfter: 0,\n      stringify: true,\n      crypto: [Object],\n      mongoUrl: 'mongodb+srv://colito:LM753951@cluster0.yjnag.mongodb.net/ecommerce?retryWrites=true&w=majority'\n    },\n    collectionP: Promise { [Collection] },\n    generate: [Function],\n    [Symbol(kCapture)]: false\n  },\n  sessionID: 'e2gfnEG1uHYdlVGbtCaWHpUuPOE60par',\n  session: Session {\n    cookie: {\n      path: '/',\n      _expires: 2021-08-07T15:16:05.984Z,\n      originalMaxAge: 60000,\n      httpOnly: true\n    }\n  },\n  _passport: {\n    instance: Authenticator {\n      _key: 'passport',\n      _strategies: [Object],\n      _serializers: [],\n      _deserializers: [],\n      _infoTransformers: [],\n      _framework: [Object],\n      _userProperty: 'user',\n      _sm: [SessionManager],\n      Authenticator: [Function: Authenticator],\n      Passport: [Function: Authenticator],\n      Strategy: [Function],\n      strategies: [Object]\n    }\n  },\n  route: Route { path: '/login', stack: [ [Layer] ], methods: { post: true } },\n  [Symbol(kCapture)]: false\n}\" (type IncomingMessage) at path \"email\" for model \"user\""}
{"stringValue":"\"IncomingMessage {\n  _readableState: ReadableState {\n    objectMode: false,\n    highWaterMark: 16384,\n    buffer: BufferList { head: null, tail: null, length: 0 },\n    length: 0,\n    pipes: null,\n    pipesCount: 0,\n    flowing: true,\n    ended: true,\n    endEmitted: true,\n    reading: false,\n    sync: false,\n    needReadable: false,\n    emittedReadable: false,\n    readableListening: false,\n    resumeScheduled: false,\n    emitClose: true,\n    autoDestroy: false,\n    destroyed: false,\n    defaultEncoding: 'utf8',\n    awaitDrainWriters: null,\n    multiAwaitDrain: false,\n    readingMore: false,\n    decoder: null,\n    encoding: null,\n    [Symbol(kPaused)]: false\n  },\n  readable: false,\n  _events: [Object: null prototype] {\n    end: [Function: resetHeadersTimeoutOnReqEnd]\n  },\n  _eventsCount: 1,\n  _maxListeners: undefined,\n  socket: Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: null,\n      pipesCount: 0,\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      emitClose: false,\n      autoDestroy: false,\n      destroyed: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    readable: true,\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      bufferedRequest: null,\n      lastBufferedRequest: null,\n      pendingcb: 0,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: false,\n      bufferedRequestCount: 0,\n      corkedRequestsFree: [Object]\n    },\n    writable: true,\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 6,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      httpAllowHalfOpen: false,\n      timeout: 120000,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      headersTimeout: 60000,\n      _connectionKey: '6::::8080',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(asyncId)]: 19\n    },\n    _server: Server {\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 6,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      httpAllowHalfOpen: false,\n      timeout: 120000,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      headersTimeout: 60000,\n      _connectionKey: '6::::8080',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(asyncId)]: 19\n    },\n    timeout: 120000,\n    parser: HTTPParser {\n      '0': [Function: parserOnHeaders],\n      '1': [Function: parserOnHeadersComplete],\n      '2': [Function: parserOnBody],\n      '3': [Function: parserOnMessageComplete],\n      '4': [Function: bound onParserExecute],\n      _headers: [],\n      _url: '',\n      socket: [Circular],\n      incoming: [Circular],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      parsingHeadersStart: 1628349359439\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      socket: [Circular],\n      connection: [Circular],\n      _header: null,\n      _onPendingData: [Function: bound updateOutgoingData],\n      _sent100: false,\n      _expect_continue: false,\n      req: [Circular],\n      locals: [Object: null prototype] {},\n      flush: [Function: flush],\n      write: [Function: write],\n      end: [Function: end],\n      on: [Function: on],\n      writeHead: [Function: writeHead],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype]\n    },\n    [Symbol(asyncId)]: 2173,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner)]: [Circular]\n    },\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: Timeout {\n      _idleTimeout: 120000,\n      _idlePrev: [TimersList],\n      _idleNext: [TimersList],\n      _idleStart: 453250,\n      _onTimeout: [Function: bound ],\n      _timerArgs: undefined,\n      _repeat: null,\n      _destroyed: false,\n      [Symbol(refed)]: false,\n      [Symbol(asyncId)]: 2174,\n      [Symbol(triggerId)]: 2173\n    },\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0\n  },\n  connection: Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: null,\n      pipesCount: 0,\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      emitClose: false,\n      autoDestroy: false,\n      destroyed: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    readable: true,\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      bufferedRequest: null,\n      lastBufferedRequest: null,\n      pendingcb: 0,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: false,\n      bufferedRequestCount: 0,\n      corkedRequestsFree: [Object]\n    },\n    writable: true,\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 6,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      httpAllowHalfOpen: false,\n      timeout: 120000,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      headersTimeout: 60000,\n      _connectionKey: '6::::8080',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(asyncId)]: 19\n    },\n    _server: Server {\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 6,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      httpAllowHalfOpen: false,\n      timeout: 120000,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      headersTimeout: 60000,\n      _connectionKey: '6::::8080',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(asyncId)]: 19\n    },\n    timeout: 120000,\n    parser: HTTPParser {\n      '0': [Function: parserOnHeaders],\n      '1': [Function: parserOnHeadersComplete],\n      '2': [Function: parserOnBody],\n      '3': [Function: parserOnMessageComplete],\n      '4': [Function: bound onParserExecute],\n      _headers: [],\n      _url: '',\n      socket: [Circular],\n      incoming: [Circular],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      parsingHeadersStart: 1628349359439\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      socket: [Circular],\n      connection: [Circular],\n      _header: null,\n      _onPendingData: [Function: bound updateOutgoingData],\n      _sent100: false,\n      _expect_continue: false,\n      req: [Circular],\n      locals: [Object: null prototype] {},\n      flush: [Function: flush],\n      write: [Function: write],\n      end: [Function: end],\n      on: [Function: on],\n      writeHead: [Function: writeHead],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype]\n    },\n    [Symbol(asyncId)]: 2173,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner)]: [Circular]\n    },\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: Timeout {\n      _idleTimeout: 120000,\n      _idlePrev: [TimersList],\n      _idleNext: [TimersList],\n      _idleStart: 453250,\n      _onTimeout: [Function: bound ],\n      _timerArgs: undefined,\n      _repeat: null,\n      _destroyed: false,\n      [Symbol(refed)]: false,\n      [Symbol(asyncId)]: 2174,\n      [Symbol(triggerId)]: 2173\n    },\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: {\n    host: 'localhost:8080',\n    'user-agent': 'insomnia/2021.4.1',\n    cookie: 'sails.sid=s%3AxvlrGy-JuGa8kdxWbUm69NU0sQie5Iq0.72gJGIR82HRzfvX0Wtc%2B8DbYeWandYpicyy%2B19G0MDk',\n    'content-type': 'application/json',\n    accept: '*/*',\n    'content-length': '64'\n  },\n  rawHeaders: [\n    'Host',\n    'localhost:8080',\n    'User-Agent',\n    'insomnia/2021.4.1',\n    'Cookie',\n    'sails.sid=s%3AxvlrGy-JuGa8kdxWbUm69NU0sQie5Iq0.72gJGIR82HRzfvX0Wtc%2B8DbYeWandYpicyy%2B19G0MDk',\n    'Content-Type',\n    'application/json',\n    'Accept',\n    '*/*',\n    'Content-Length',\n    '64'\n  ],\n  trailers: {},\n  rawTrailers: [],\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: null,\n      pipesCount: 0,\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      emitClose: false,\n      autoDestroy: false,\n      destroyed: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    readable: true,\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      bufferedRequest: null,\n      lastBufferedRequest: null,\n      pendingcb: 0,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: false,\n      bufferedRequestCount: 0,\n      corkedRequestsFree: [Object]\n    },\n    writable: true,\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 6,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      httpAllowHalfOpen: false,\n      timeout: 120000,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      headersTimeout: 60000,\n      _connectionKey: '6::::8080',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(asyncId)]: 19\n    },\n    _server: Server {\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 6,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      httpAllowHalfOpen: false,\n      timeout: 120000,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      headersTimeout: 60000,\n      _connectionKey: '6::::8080',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(asyncId)]: 19\n    },\n    timeout: 120000,\n    parser: HTTPParser {\n      '0': [Function: parserOnHeaders],\n      '1': [Function: parserOnHeadersComplete],\n      '2': [Function: parserOnBody],\n      '3': [Function: parserOnMessageComplete],\n      '4': [Function: bound onParserExecute],\n      _headers: [],\n      _url: '',\n      socket: [Circular],\n      incoming: [Circular],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      parsingHeadersStart: 1628349359439\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      socket: [Circular],\n      connection: [Circular],\n      _header: null,\n      _onPendingData: [Function: bound updateOutgoingData],\n      _sent100: false,\n      _expect_continue: false,\n      req: [Circular],\n      locals: [Object: null prototype] {},\n      flush: [Function: flush],\n      write: [Function: write],\n      end: [Function: end],\n      on: [Function: on],\n      writeHead: [Function: writeHead],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype]\n    },\n    [Symbol(asyncId)]: 2173,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner)]: [Circular]\n    },\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: Timeout {\n      _idleTimeout: 120000,\n      _idlePrev: [TimersList],\n      _idleNext: [TimersList],\n      _idleStart: 453250,\n      _onTimeout: [Function: bound ],\n      _timerArgs: undefined,\n      _repeat: null,\n      _destroyed: false,\n      [Symbol(refed)]: false,\n      [Symbol(asyncId)]: 2174,\n      [Symbol(triggerId)]: 2173\n    },\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0\n  },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/login',\n  _parsedUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  params: {},\n  query: {},\n  res: ServerResponse {\n    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n    _eventsCount: 1,\n    _maxListeners: undefined,\n    outputData: [],\n    outputSize: 0,\n    writable: true,\n    _last: false,\n    chunkedEncoding: false,\n    shouldKeepAlive: true,\n    useChunkedEncodingByDefault: true,\n    sendDate: true,\n    _removedConnection: false,\n    _removedContLen: false,\n    _removedTE: false,\n    _contentLength: null,\n    _hasBody: true,\n    _trailer: '',\n    finished: false,\n    _headerSent: false,\n    socket: Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _readableState: [ReadableState],\n      readable: true,\n      _events: [Object: null prototype],\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      _writableState: [WritableState],\n      writable: true,\n      allowHalfOpen: true,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      timeout: 120000,\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      _paused: false,\n      _httpMessage: [Circular],\n      [Symbol(asyncId)]: 2173,\n      [Symbol(kHandle)]: [TCP],\n      [Symbol(kSetNoDelay)]: false,\n      [Symbol(lastWriteQueueSize)]: 0,\n      [Symbol(timeout)]: Timeout {\n        _idleTimeout: 120000,\n        _idlePrev: [TimersList],\n        _idleNext: [TimersList],\n        _idleStart: 453250,\n        _onTimeout: [Function: bound ],\n        _timerArgs: undefined,\n        _repeat: null,\n        _destroyed: false,\n        [Symbol(refed)]: false,\n        [Symbol(asyncId)]: 2174,\n        [Symbol(triggerId)]: 2173\n      },\n      [Symbol(kBuffer)]: null,\n      [Symbol(kBufferCb)]: null,\n      [Symbol(kBufferGen)]: null,\n      [Symbol(kCapture)]: false,\n      [Symbol(kBytesRead)]: 0,\n      [Symbol(kBytesWritten)]: 0\n    },\n    connection: Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _readableState: [ReadableState],\n      readable: true,\n      _events: [Object: null prototype],\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      _writableState: [WritableState],\n      writable: true,\n      allowHalfOpen: true,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      timeout: 120000,\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      _paused: false,\n      _httpMessage: [Circular],\n      [Symbol(asyncId)]: 2173,\n      [Symbol(kHandle)]: [TCP],\n      [Symbol(kSetNoDelay)]: false,\n      [Symbol(lastWriteQueueSize)]: 0,\n      [Symbol(timeout)]: Timeout {\n        _idleTimeout: 120000,\n        _idlePrev: [TimersList],\n        _idleNext: [TimersList],\n        _idleStart: 453250,\n        _onTimeout: [Function: bound ],\n        _timerArgs: undefined,\n        _repeat: null,\n        _destroyed: false,\n        [Symbol(refed)]: false,\n        [Symbol(asyncId)]: 2174,\n        [Symbol(triggerId)]: 2173\n      },\n      [Symbol(kBuffer)]: null,\n      [Symbol(kBufferCb)]: null,\n      [Symbol(kBufferGen)]: null,\n      [Symbol(kCapture)]: false,\n      [Symbol(kBytesRead)]: 0,\n      [Symbol(kBytesWritten)]: 0\n    },\n    _header: null,\n    _onPendingData: [Function: bound updateOutgoingData],\n    _sent100: false,\n    _expect_continue: false,\n    req: [Circular],\n    locals: [Object: null prototype] {},\n    flush: [Function: flush],\n    write: [Function: write],\n    end: [Function: end],\n    on: [Function: on],\n    writeHead: [Function: writeHead],\n    [Symbol(kCapture)]: false,\n    [Symbol(kNeedDrain)]: false,\n    [Symbol(corked)]: 0,\n    [Symbol(kOutHeaders)]: [Object: null prototype] {\n      'x-powered-by': [Array],\n      'access-control-allow-origin': [Array]\n    }\n  },\n  body: { email: 'lucasmarina26+1@gmail.com', password: '1234' },\n  _body: true,\n  length: undefined,\n  secret: undefined,\n  cookies: {\n    'sails.sid': 's:xvlrGy-JuGa8kdxWbUm69NU0sQie5Iq0.72gJGIR82HRzfvX0Wtc+8DbYeWandYpicyy+19G0MDk'\n  },\n  signedCookies: [Object: null prototype] {},\n  _parsedOriginalUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  sessionStore: MongoStore {\n    _events: [Object: null prototype] {\n      disconnect: [Function: ondisconnect],\n      connect: [Function: onconnect]\n    },\n    _eventsCount: 2,\n    _maxListeners: undefined,\n    crypto: null,\n    transformFunctions: {\n      serialize: [Function: stringify],\n      unserialize: [Function: parse]\n    },\n    clientP: Promise { [MongoClient] },\n    options: {\n      collectionName: 'sessions',\n      ttl: 600,\n      mongoOptions: [Object],\n      autoRemove: 'native',\n      autoRemoveInterval: 10,\n      touchAfter: 0,\n      stringify: true,\n      crypto: [Object],\n      mongoUrl: 'mongodb+srv://colito:LM753951@cluster0.yjnag.mongodb.net/ecommerce?retryWrites=true&w=majority'\n    },\n    collectionP: Promise { [Collection] },\n    generate: [Function],\n    [Symbol(kCapture)]: false\n  },\n  sessionID: 'cNkWCMlnMjVD7W89MglnIbfOzyw_-y2E',\n  session: Session {\n    cookie: {\n      path: '/',\n      _expires: 2021-08-07T15:16:59.441Z,\n      originalMaxAge: 60000,\n      httpOnly: true\n    }\n  },\n  _passport: {\n    instance: Authenticator {\n      _key: 'passport',\n      _strategies: [Object],\n      _serializers: [],\n      _deserializers: [],\n      _infoTransformers: [],\n      _framework: [Object],\n      _userProperty: 'user',\n      _sm: [SessionManager],\n      Authenticator: [Function: Authenticator],\n      Passport: [Function: Authenticator],\n      Strategy: [Function],\n      strategies: [Object]\n    }\n  },\n  route: Route { path: '/login', stack: [ [Layer] ], methods: { post: true } },\n  [Symbol(kCapture)]: false\n}\"","valueType":"IncomingMessage","kind":"string","value":{"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":true,"ended":true,"endEmitted":true,"reading":false,"sync":false,"needReadable":false,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"emitClose":true,"autoDestroy":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrainWriters":null,"multiAwaitDrain":false,"readingMore":false,"decoder":null,"encoding":null},"readable":false,"_events":{},"_eventsCount":1,"socket":{"connecting":false,"_hadError":false,"_parent":null,"_host":null,"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":true,"ended":false,"endEmitted":false,"reading":true,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"emitClose":false,"autoDestroy":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrainWriters":null,"multiAwaitDrain":false,"readingMore":false,"decoder":null,"encoding":null},"readable":true,"_events":{"end":[null,null],"close":[null,null]},"_eventsCount":8,"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":false,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":true,"bufferProcessing":false,"writecb":null,"writelen":0,"afterWriteTickInfo":null,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"emitClose":false,"autoDestroy":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":true,"_sockname":null,"_pendingData":null,"_pendingEncoding":"","server":{"_events":{},"_eventsCount":6,"_connections":1,"_handle":{"reading":false},"_usingWorkers":false,"_workers":[],"_unref":false,"allowHalfOpen":true,"pauseOnConnect":false,"httpAllowHalfOpen":false,"timeout":120000,"keepAliveTimeout":5000,"maxHeadersCount":null,"headersTimeout":60000,"_connectionKey":"6::::8080"},"_server":{"_events":{},"_eventsCount":6,"_connections":1,"_handle":{"reading":false},"_usingWorkers":false,"_workers":[],"_unref":false,"allowHalfOpen":true,"pauseOnConnect":false,"httpAllowHalfOpen":false,"timeout":120000,"keepAliveTimeout":5000,"maxHeadersCount":null,"headersTimeout":60000,"_connectionKey":"6::::8080"},"timeout":120000,"parser":{"_headers":[],"_url":"","socket":"[Circular]","incoming":"[Circular]","outgoing":null,"maxHeaderPairs":2000,"_consumed":true,"parsingHeadersStart":1628349359439},"_paused":false,"_httpMessage":{"_events":{},"_eventsCount":1,"outputData":[],"outputSize":0,"writable":true,"_last":false,"chunkedEncoding":false,"shouldKeepAlive":true,"useChunkedEncodingByDefault":true,"sendDate":true,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_contentLength":null,"_hasBody":true,"_trailer":"","finished":false,"_headerSent":false,"socket":"[Circular]","connection":"[Circular]","_header":null,"_sent100":false,"_expect_continue":false,"req":"[Circular]","locals":{}}},"connection":{"connecting":false,"_hadError":false,"_parent":null,"_host":null,"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":true,"ended":false,"endEmitted":false,"reading":true,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"emitClose":false,"autoDestroy":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrainWriters":null,"multiAwaitDrain":false,"readingMore":false,"decoder":null,"encoding":null},"readable":true,"_events":{"end":[null,null],"close":[null,null]},"_eventsCount":8,"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":false,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":true,"bufferProcessing":false,"writecb":null,"writelen":0,"afterWriteTickInfo":null,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"emitClose":false,"autoDestroy":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":true,"_sockname":null,"_pendingData":null,"_pendingEncoding":"","server":{"_events":{},"_eventsCount":6,"_connections":1,"_handle":{"reading":false},"_usingWorkers":false,"_workers":[],"_unref":false,"allowHalfOpen":true,"pauseOnConnect":false,"httpAllowHalfOpen":false,"timeout":120000,"keepAliveTimeout":5000,"maxHeadersCount":null,"headersTimeout":60000,"_connectionKey":"6::::8080"},"_server":{"_events":{},"_eventsCount":6,"_connections":1,"_handle":{"reading":false},"_usingWorkers":false,"_workers":[],"_unref":false,"allowHalfOpen":true,"pauseOnConnect":false,"httpAllowHalfOpen":false,"timeout":120000,"keepAliveTimeout":5000,"maxHeadersCount":null,"headersTimeout":60000,"_connectionKey":"6::::8080"},"timeout":120000,"parser":{"_headers":[],"_url":"","socket":"[Circular]","incoming":"[Circular]","outgoing":null,"maxHeaderPairs":2000,"_consumed":true,"parsingHeadersStart":1628349359439},"_paused":false,"_httpMessage":{"_events":{},"_eventsCount":1,"outputData":[],"outputSize":0,"writable":true,"_last":false,"chunkedEncoding":false,"shouldKeepAlive":true,"useChunkedEncodingByDefault":true,"sendDate":true,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_contentLength":null,"_hasBody":true,"_trailer":"","finished":false,"_headerSent":false,"socket":"[Circular]","connection":"[Circular]","_header":null,"_sent100":false,"_expect_continue":false,"req":"[Circular]","locals":{}}},"httpVersionMajor":1,"httpVersionMinor":1,"httpVersion":"1.1","complete":true,"headers":{"host":"localhost:8080","user-agent":"insomnia/2021.4.1","cookie":"sails.sid=s%3AxvlrGy-JuGa8kdxWbUm69NU0sQie5Iq0.72gJGIR82HRzfvX0Wtc%2B8DbYeWandYpicyy%2B19G0MDk","content-type":"application/json","accept":"*/*","content-length":"64"},"rawHeaders":["Host","localhost:8080","User-Agent","insomnia/2021.4.1","Cookie","sails.sid=s%3AxvlrGy-JuGa8kdxWbUm69NU0sQie5Iq0.72gJGIR82HRzfvX0Wtc%2B8DbYeWandYpicyy%2B19G0MDk","Content-Type","application/json","Accept","*/*","Content-Length","64"],"trailers":{},"rawTrailers":[],"aborted":false,"upgrade":false,"url":"/login","method":"POST","statusCode":null,"statusMessage":null,"client":{"connecting":false,"_hadError":false,"_parent":null,"_host":null,"_readableState":{"objectMode":false,"highWaterMark":16384,"buffer":{"head":null,"tail":null,"length":0},"length":0,"pipes":null,"pipesCount":0,"flowing":true,"ended":false,"endEmitted":false,"reading":true,"sync":false,"needReadable":true,"emittedReadable":false,"readableListening":false,"resumeScheduled":false,"emitClose":false,"autoDestroy":false,"destroyed":false,"defaultEncoding":"utf8","awaitDrainWriters":null,"multiAwaitDrain":false,"readingMore":false,"decoder":null,"encoding":null},"readable":true,"_events":{"end":[null,null],"close":[null,null]},"_eventsCount":8,"_writableState":{"objectMode":false,"highWaterMark":16384,"finalCalled":false,"needDrain":false,"ending":false,"ended":false,"finished":false,"destroyed":false,"decodeStrings":false,"defaultEncoding":"utf8","length":0,"writing":false,"corked":0,"sync":true,"bufferProcessing":false,"writecb":null,"writelen":0,"afterWriteTickInfo":null,"bufferedRequest":null,"lastBufferedRequest":null,"pendingcb":0,"prefinished":false,"errorEmitted":false,"emitClose":false,"autoDestroy":false,"bufferedRequestCount":0,"corkedRequestsFree":{"next":null,"entry":null}},"writable":true,"allowHalfOpen":true,"_sockname":null,"_pendingData":null,"_pendingEncoding":"","server":{"_events":{},"_eventsCount":6,"_connections":1,"_handle":{"reading":false},"_usingWorkers":false,"_workers":[],"_unref":false,"allowHalfOpen":true,"pauseOnConnect":false,"httpAllowHalfOpen":false,"timeout":120000,"keepAliveTimeout":5000,"maxHeadersCount":null,"headersTimeout":60000,"_connectionKey":"6::::8080"},"_server":{"_events":{},"_eventsCount":6,"_connections":1,"_handle":{"reading":false},"_usingWorkers":false,"_workers":[],"_unref":false,"allowHalfOpen":true,"pauseOnConnect":false,"httpAllowHalfOpen":false,"timeout":120000,"keepAliveTimeout":5000,"maxHeadersCount":null,"headersTimeout":60000,"_connectionKey":"6::::8080"},"timeout":120000,"parser":{"_headers":[],"_url":"","socket":"[Circular]","incoming":"[Circular]","outgoing":null,"maxHeaderPairs":2000,"_consumed":true,"parsingHeadersStart":1628349359439},"_paused":false,"_httpMessage":{"_events":{},"_eventsCount":1,"outputData":[],"outputSize":0,"writable":true,"_last":false,"chunkedEncoding":false,"shouldKeepAlive":true,"useChunkedEncodingByDefault":true,"sendDate":true,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_contentLength":null,"_hasBody":true,"_trailer":"","finished":false,"_headerSent":false,"socket":"[Circular]","connection":"[Circular]","_header":null,"_sent100":false,"_expect_continue":false,"req":"[Circular]","locals":{}}},"_consuming":true,"_dumped":false,"baseUrl":"","originalUrl":"/login","_parsedUrl":{"protocol":null,"slashes":null,"auth":null,"host":null,"port":null,"hostname":null,"hash":null,"search":null,"query":null,"pathname":"/login","path":"/login","href":"/login","_raw":"/login"},"params":{},"query":{},"res":{"_events":{},"_eventsCount":1,"outputData":[],"outputSize":0,"writable":true,"_last":false,"chunkedEncoding":false,"shouldKeepAlive":true,"useChunkedEncodingByDefault":true,"sendDate":true,"_removedConnection":false,"_removedContLen":false,"_removedTE":false,"_contentLength":null,"_hasBody":true,"_trailer":"","finished":false,"_headerSent":false,"socket":"[Circular]","connection":"[Circular]","_header":null,"_sent100":false,"_expect_continue":false,"req":"[Circular]","locals":{}},"body":{"email":"lucasmarina26+1@gmail.com","password":"1234"},"_body":true,"cookies":{"sails.sid":"s:xvlrGy-JuGa8kdxWbUm69NU0sQie5Iq0.72gJGIR82HRzfvX0Wtc+8DbYeWandYpicyy+19G0MDk"},"signedCookies":{},"_parsedOriginalUrl":{"protocol":null,"slashes":null,"auth":null,"host":null,"port":null,"hostname":null,"hash":null,"search":null,"query":null,"pathname":"/login","path":"/login","href":"/login","_raw":"/login"},"sessionStore":{"_events":{},"_eventsCount":2,"crypto":null,"transformFunctions":{},"clientP":{},"options":{"collectionName":"sessions","ttl":600,"mongoOptions":{"useNewUrlParser":true,"useUnifiedTopology":true},"autoRemove":"native","autoRemoveInterval":10,"touchAfter":0,"stringify":true,"crypto":{"secret":false,"algorithm":"aes-256-gcm","hashing":"sha512","encodeas":"base64","key_size":32,"iv_size":16,"at_size":16},"mongoUrl":"mongodb+srv://colito:LM753951@cluster0.yjnag.mongodb.net/ecommerce?retryWrites=true&w=majority"},"collectionP":{}},"sessionID":"cNkWCMlnMjVD7W89MglnIbfOzyw_-y2E","session":{"cookie":{"originalMaxAge":60000,"expires":"2021-08-07T15:16:59.441Z","httpOnly":true,"path":"/"}},"_passport":{"instance":{"_key":"passport","_strategies":{"session":{"name":"session"},"signup":{"_usernameField":"email","_passwordField":"password","name":"local","_passReqToCallback":true},"login":{"_usernameField":"email","_passwordField":"password","name":"local","_passReqToCallback":true},"facebook":{"name":"facebook","_oauth2":{"_clientId":"144567617729985","_clientSecret":"d050d4bcb6a419b96d04579e487816f1","_baseSite":"","_authorizeUrl":"https://www.facebook.com/v3.2/dialog/oauth","_accessTokenUrl":"https://graph.facebook.com/v3.2/oauth/access_token","_accessTokenName":"access_token","_authMethod":"Bearer","_customHeaders":{},"_useAuthorizationHeaderForGET":false},"_callbackURL":"http://localhost:8080/auth/facebook/callback","_scope":["email"],"_scopeSeparator":",","_key":"oauth2:www.facebook.com","_stateStore":{},"_skipUserProfile":false,"_profileURL":"https://graph.facebook.com/v3.2/me","_profileFields":["id","displayName","email","picture.type(large)"],"_enableProof":true,"_clientSecret":"d050d4bcb6a419b96d04579e487816f1"},"jwt":{"name":"jwt","_verifOpts":{"ignoreExpiration":false}}},"_serializers":[],"_deserializers":[],"_infoTransformers":[],"_framework":{},"_userProperty":"user","_sm":{"_key":"passport"},"strategies":{}}},"route":{"path":"/login","stack":[{"name":"login","keys":[],"regexp":{"fast_star":false,"fast_slash":false},"method":"post"}],"methods":{"post":true}}},"path":"email","reason":null,"name":"CastError","message":"Cast to string failed for value \"IncomingMessage {\n  _readableState: ReadableState {\n    objectMode: false,\n    highWaterMark: 16384,\n    buffer: BufferList { head: null, tail: null, length: 0 },\n    length: 0,\n    pipes: null,\n    pipesCount: 0,\n    flowing: true,\n    ended: true,\n    endEmitted: true,\n    reading: false,\n    sync: false,\n    needReadable: false,\n    emittedReadable: false,\n    readableListening: false,\n    resumeScheduled: false,\n    emitClose: true,\n    autoDestroy: false,\n    destroyed: false,\n    defaultEncoding: 'utf8',\n    awaitDrainWriters: null,\n    multiAwaitDrain: false,\n    readingMore: false,\n    decoder: null,\n    encoding: null,\n    [Symbol(kPaused)]: false\n  },\n  readable: false,\n  _events: [Object: null prototype] {\n    end: [Function: resetHeadersTimeoutOnReqEnd]\n  },\n  _eventsCount: 1,\n  _maxListeners: undefined,\n  socket: Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: null,\n      pipesCount: 0,\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      emitClose: false,\n      autoDestroy: false,\n      destroyed: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    readable: true,\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      bufferedRequest: null,\n      lastBufferedRequest: null,\n      pendingcb: 0,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: false,\n      bufferedRequestCount: 0,\n      corkedRequestsFree: [Object]\n    },\n    writable: true,\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 6,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      httpAllowHalfOpen: false,\n      timeout: 120000,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      headersTimeout: 60000,\n      _connectionKey: '6::::8080',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(asyncId)]: 19\n    },\n    _server: Server {\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 6,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      httpAllowHalfOpen: false,\n      timeout: 120000,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      headersTimeout: 60000,\n      _connectionKey: '6::::8080',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(asyncId)]: 19\n    },\n    timeout: 120000,\n    parser: HTTPParser {\n      '0': [Function: parserOnHeaders],\n      '1': [Function: parserOnHeadersComplete],\n      '2': [Function: parserOnBody],\n      '3': [Function: parserOnMessageComplete],\n      '4': [Function: bound onParserExecute],\n      _headers: [],\n      _url: '',\n      socket: [Circular],\n      incoming: [Circular],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      parsingHeadersStart: 1628349359439\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      socket: [Circular],\n      connection: [Circular],\n      _header: null,\n      _onPendingData: [Function: bound updateOutgoingData],\n      _sent100: false,\n      _expect_continue: false,\n      req: [Circular],\n      locals: [Object: null prototype] {},\n      flush: [Function: flush],\n      write: [Function: write],\n      end: [Function: end],\n      on: [Function: on],\n      writeHead: [Function: writeHead],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype]\n    },\n    [Symbol(asyncId)]: 2173,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner)]: [Circular]\n    },\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: Timeout {\n      _idleTimeout: 120000,\n      _idlePrev: [TimersList],\n      _idleNext: [TimersList],\n      _idleStart: 453250,\n      _onTimeout: [Function: bound ],\n      _timerArgs: undefined,\n      _repeat: null,\n      _destroyed: false,\n      [Symbol(refed)]: false,\n      [Symbol(asyncId)]: 2174,\n      [Symbol(triggerId)]: 2173\n    },\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0\n  },\n  connection: Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: null,\n      pipesCount: 0,\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      emitClose: false,\n      autoDestroy: false,\n      destroyed: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    readable: true,\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      bufferedRequest: null,\n      lastBufferedRequest: null,\n      pendingcb: 0,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: false,\n      bufferedRequestCount: 0,\n      corkedRequestsFree: [Object]\n    },\n    writable: true,\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 6,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      httpAllowHalfOpen: false,\n      timeout: 120000,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      headersTimeout: 60000,\n      _connectionKey: '6::::8080',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(asyncId)]: 19\n    },\n    _server: Server {\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 6,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      httpAllowHalfOpen: false,\n      timeout: 120000,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      headersTimeout: 60000,\n      _connectionKey: '6::::8080',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(asyncId)]: 19\n    },\n    timeout: 120000,\n    parser: HTTPParser {\n      '0': [Function: parserOnHeaders],\n      '1': [Function: parserOnHeadersComplete],\n      '2': [Function: parserOnBody],\n      '3': [Function: parserOnMessageComplete],\n      '4': [Function: bound onParserExecute],\n      _headers: [],\n      _url: '',\n      socket: [Circular],\n      incoming: [Circular],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      parsingHeadersStart: 1628349359439\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      socket: [Circular],\n      connection: [Circular],\n      _header: null,\n      _onPendingData: [Function: bound updateOutgoingData],\n      _sent100: false,\n      _expect_continue: false,\n      req: [Circular],\n      locals: [Object: null prototype] {},\n      flush: [Function: flush],\n      write: [Function: write],\n      end: [Function: end],\n      on: [Function: on],\n      writeHead: [Function: writeHead],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype]\n    },\n    [Symbol(asyncId)]: 2173,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner)]: [Circular]\n    },\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: Timeout {\n      _idleTimeout: 120000,\n      _idlePrev: [TimersList],\n      _idleNext: [TimersList],\n      _idleStart: 453250,\n      _onTimeout: [Function: bound ],\n      _timerArgs: undefined,\n      _repeat: null,\n      _destroyed: false,\n      [Symbol(refed)]: false,\n      [Symbol(asyncId)]: 2174,\n      [Symbol(triggerId)]: 2173\n    },\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  headers: {\n    host: 'localhost:8080',\n    'user-agent': 'insomnia/2021.4.1',\n    cookie: 'sails.sid=s%3AxvlrGy-JuGa8kdxWbUm69NU0sQie5Iq0.72gJGIR82HRzfvX0Wtc%2B8DbYeWandYpicyy%2B19G0MDk',\n    'content-type': 'application/json',\n    accept: '*/*',\n    'content-length': '64'\n  },\n  rawHeaders: [\n    'Host',\n    'localhost:8080',\n    'User-Agent',\n    'insomnia/2021.4.1',\n    'Cookie',\n    'sails.sid=s%3AxvlrGy-JuGa8kdxWbUm69NU0sQie5Iq0.72gJGIR82HRzfvX0Wtc%2B8DbYeWandYpicyy%2B19G0MDk',\n    'Content-Type',\n    'application/json',\n    'Accept',\n    '*/*',\n    'Content-Length',\n    '64'\n  ],\n  trailers: {},\n  rawTrailers: [],\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: null,\n      pipesCount: 0,\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      emitClose: false,\n      autoDestroy: false,\n      destroyed: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    readable: true,\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      bufferedRequest: null,\n      lastBufferedRequest: null,\n      pendingcb: 0,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: false,\n      bufferedRequestCount: 0,\n      corkedRequestsFree: [Object]\n    },\n    writable: true,\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 6,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      httpAllowHalfOpen: false,\n      timeout: 120000,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      headersTimeout: 60000,\n      _connectionKey: '6::::8080',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(asyncId)]: 19\n    },\n    _server: Server {\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 6,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      httpAllowHalfOpen: false,\n      timeout: 120000,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      headersTimeout: 60000,\n      _connectionKey: '6::::8080',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(asyncId)]: 19\n    },\n    timeout: 120000,\n    parser: HTTPParser {\n      '0': [Function: parserOnHeaders],\n      '1': [Function: parserOnHeadersComplete],\n      '2': [Function: parserOnBody],\n      '3': [Function: parserOnMessageComplete],\n      '4': [Function: bound onParserExecute],\n      _headers: [],\n      _url: '',\n      socket: [Circular],\n      incoming: [Circular],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      parsingHeadersStart: 1628349359439\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      socket: [Circular],\n      connection: [Circular],\n      _header: null,\n      _onPendingData: [Function: bound updateOutgoingData],\n      _sent100: false,\n      _expect_continue: false,\n      req: [Circular],\n      locals: [Object: null prototype] {},\n      flush: [Function: flush],\n      write: [Function: write],\n      end: [Function: end],\n      on: [Function: on],\n      writeHead: [Function: writeHead],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype]\n    },\n    [Symbol(asyncId)]: 2173,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner)]: [Circular]\n    },\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: Timeout {\n      _idleTimeout: 120000,\n      _idlePrev: [TimersList],\n      _idleNext: [TimersList],\n      _idleStart: 453250,\n      _onTimeout: [Function: bound ],\n      _timerArgs: undefined,\n      _repeat: null,\n      _destroyed: false,\n      [Symbol(refed)]: false,\n      [Symbol(asyncId)]: 2174,\n      [Symbol(triggerId)]: 2173\n    },\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0\n  },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/login',\n  _parsedUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  params: {},\n  query: {},\n  res: ServerResponse {\n    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n    _eventsCount: 1,\n    _maxListeners: undefined,\n    outputData: [],\n    outputSize: 0,\n    writable: true,\n    _last: false,\n    chunkedEncoding: false,\n    shouldKeepAlive: true,\n    useChunkedEncodingByDefault: true,\n    sendDate: true,\n    _removedConnection: false,\n    _removedContLen: false,\n    _removedTE: false,\n    _contentLength: null,\n    _hasBody: true,\n    _trailer: '',\n    finished: false,\n    _headerSent: false,\n    socket: Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _readableState: [ReadableState],\n      readable: true,\n      _events: [Object: null prototype],\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      _writableState: [WritableState],\n      writable: true,\n      allowHalfOpen: true,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      timeout: 120000,\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      _paused: false,\n      _httpMessage: [Circular],\n      [Symbol(asyncId)]: 2173,\n      [Symbol(kHandle)]: [TCP],\n      [Symbol(kSetNoDelay)]: false,\n      [Symbol(lastWriteQueueSize)]: 0,\n      [Symbol(timeout)]: Timeout {\n        _idleTimeout: 120000,\n        _idlePrev: [TimersList],\n        _idleNext: [TimersList],\n        _idleStart: 453250,\n        _onTimeout: [Function: bound ],\n        _timerArgs: undefined,\n        _repeat: null,\n        _destroyed: false,\n        [Symbol(refed)]: false,\n        [Symbol(asyncId)]: 2174,\n        [Symbol(triggerId)]: 2173\n      },\n      [Symbol(kBuffer)]: null,\n      [Symbol(kBufferCb)]: null,\n      [Symbol(kBufferGen)]: null,\n      [Symbol(kCapture)]: false,\n      [Symbol(kBytesRead)]: 0,\n      [Symbol(kBytesWritten)]: 0\n    },\n    connection: Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _readableState: [ReadableState],\n      readable: true,\n      _events: [Object: null prototype],\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      _writableState: [WritableState],\n      writable: true,\n      allowHalfOpen: true,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      timeout: 120000,\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      _paused: false,\n      _httpMessage: [Circular],\n      [Symbol(asyncId)]: 2173,\n      [Symbol(kHandle)]: [TCP],\n      [Symbol(kSetNoDelay)]: false,\n      [Symbol(lastWriteQueueSize)]: 0,\n      [Symbol(timeout)]: Timeout {\n        _idleTimeout: 120000,\n        _idlePrev: [TimersList],\n        _idleNext: [TimersList],\n        _idleStart: 453250,\n        _onTimeout: [Function: bound ],\n        _timerArgs: undefined,\n        _repeat: null,\n        _destroyed: false,\n        [Symbol(refed)]: false,\n        [Symbol(asyncId)]: 2174,\n        [Symbol(triggerId)]: 2173\n      },\n      [Symbol(kBuffer)]: null,\n      [Symbol(kBufferCb)]: null,\n      [Symbol(kBufferGen)]: null,\n      [Symbol(kCapture)]: false,\n      [Symbol(kBytesRead)]: 0,\n      [Symbol(kBytesWritten)]: 0\n    },\n    _header: null,\n    _onPendingData: [Function: bound updateOutgoingData],\n    _sent100: false,\n    _expect_continue: false,\n    req: [Circular],\n    locals: [Object: null prototype] {},\n    flush: [Function: flush],\n    write: [Function: write],\n    end: [Function: end],\n    on: [Function: on],\n    writeHead: [Function: writeHead],\n    [Symbol(kCapture)]: false,\n    [Symbol(kNeedDrain)]: false,\n    [Symbol(corked)]: 0,\n    [Symbol(kOutHeaders)]: [Object: null prototype] {\n      'x-powered-by': [Array],\n      'access-control-allow-origin': [Array]\n    }\n  },\n  body: { email: 'lucasmarina26+1@gmail.com', password: '1234' },\n  _body: true,\n  length: undefined,\n  secret: undefined,\n  cookies: {\n    'sails.sid': 's:xvlrGy-JuGa8kdxWbUm69NU0sQie5Iq0.72gJGIR82HRzfvX0Wtc+8DbYeWandYpicyy+19G0MDk'\n  },\n  signedCookies: [Object: null prototype] {},\n  _parsedOriginalUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  sessionStore: MongoStore {\n    _events: [Object: null prototype] {\n      disconnect: [Function: ondisconnect],\n      connect: [Function: onconnect]\n    },\n    _eventsCount: 2,\n    _maxListeners: undefined,\n    crypto: null,\n    transformFunctions: {\n      serialize: [Function: stringify],\n      unserialize: [Function: parse]\n    },\n    clientP: Promise { [MongoClient] },\n    options: {\n      collectionName: 'sessions',\n      ttl: 600,\n      mongoOptions: [Object],\n      autoRemove: 'native',\n      autoRemoveInterval: 10,\n      touchAfter: 0,\n      stringify: true,\n      crypto: [Object],\n      mongoUrl: 'mongodb+srv://colito:LM753951@cluster0.yjnag.mongodb.net/ecommerce?retryWrites=true&w=majority'\n    },\n    collectionP: Promise { [Collection] },\n    generate: [Function],\n    [Symbol(kCapture)]: false\n  },\n  sessionID: 'cNkWCMlnMjVD7W89MglnIbfOzyw_-y2E',\n  session: Session {\n    cookie: {\n      path: '/',\n      _expires: 2021-08-07T15:16:59.441Z,\n      originalMaxAge: 60000,\n      httpOnly: true\n    }\n  },\n  _passport: {\n    instance: Authenticator {\n      _key: 'passport',\n      _strategies: [Object],\n      _serializers: [],\n      _deserializers: [],\n      _infoTransformers: [],\n      _framework: [Object],\n      _userProperty: 'user',\n      _sm: [SessionManager],\n      Authenticator: [Function: Authenticator],\n      Passport: [Function: Authenticator],\n      Strategy: [Function],\n      strategies: [Object]\n    }\n  },\n  route: Route { path: '/login', stack: [ [Layer] ], methods: { post: true } },\n  [Symbol(kCapture)]: false\n}\" (type IncomingMessage) at path \"email\" for model \"user\""}
{"message":{},"level":"error"}
{"level":"error"}
